name: build

on:
  push:
    branches: master
  pull_request:

jobs:
  sanity:
    name: sanity / ${{ matrix.toxenv }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.12"]
        toxenv: [django_not_installed, ruff, pylint, readme]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Execute tests
        run: |
          pip install -U pip poetry tox
          poetry install

          export TOXENV=${{ matrix.toxenv }}
          export PYTHON=${{ matrix.python-version }}
          tox

  test_latest:
    name:
      test latest / Django@${{ matrix.django-version }} / Python@${{
      matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
        django-version: ["5.0", "5.1", "-main"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Execute tests
        run: |
          pip install -U pip poetry tox
          poetry install

          export DJANGO=${{ matrix.django-version }}
          export PYTHON=${{ matrix.python-version }}
          export TOXENV=$(echo py${{ matrix.python-version }}-django${{ matrix.django-version }} | tr -d .)
          tox

      - name: Coveralls
        env:
          COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          pip install coveralls
          coveralls --service=github

  test_maintained:
    name:
      test maintained / Django@${{ matrix.django-version }} / Python@${{
      matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]
        django-version: ["4.0", "4.1", "4.2"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Execute tests
        run: |
          pip install -U pip poetry tox
          poetry install

          export DJANGO=${{ matrix.django-version }}
          export PYTHON=${{ matrix.python-version }}
          export TOXENV=$(echo py${{ matrix.python-version }}-django${{ matrix.django-version }} | tr -d .)
          tox

  test_deprecated: # testing older versions of python+django
    name:
      test old stuff / Django@${{ matrix.django-version }} / Python@${{
      matrix.python-version }}
    runs-on: ubuntu-latest
    strategy: # TODO: use a YAML anchor - not supported in GitHub actions "yet"
      fail-fast: false
      matrix:
        python-version: [3.9]
        django-version: [3.2, 3.1, "3.0", "2.2"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Execute tests
        run: |
          pip install -U pip poetry tox
          poetry install

          export DJANGO=${{ matrix.django-version }}
          export PYTHON=${{ matrix.python-version }}
          export TOXENV=$(echo py${{ matrix.python-version }}-django${{ matrix.django-version }} | tr -d .)
          tox

  build_and_package_sanity:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.12"]

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - name: Build
        run: |
          pip install -U pip poetry tox
          poetry install
          ./scripts/build.sh
